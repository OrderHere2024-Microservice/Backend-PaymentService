server:
  port: 9010

spring:
  profiles:
      active: local
  application:
    name: PaymentService
  cloud:
    aws:
      region:
        static: ap-southeast-2
  datasource:
    url: jdbc:postgresql://localhost:5434/postgres
    username: postgres
    password: orderhere
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  flyway:
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: false
    locations: classpath:db/migration
    schemas: public
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:7080/realms/orderhere

  graphql:
    path: /graphql
    graphiql:
      enabled: true
      path: /graphiql

  jackson:
    deserialization:
      fail-on-unknown-properties: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
        delivery.timeout.ms: 120000
        linger.ms: 0
        request.timeout.ms: 30000
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: true

resilience4j:
  retry:
    instances:
      healthCheck:
        maxAttempts: 10
        waitDuration: 100ms
  circuitbreaker:
    instances:
      healthCheck:
        slidingWindowSize: 50
        failureRateThreshold: 80
  ratelimiter:
    instances:
      healthCheck:
        limitForPeriod: 1000
        timeoutDuration: 1s
  bulkhead:
    instances:
      healthCheck:
        maxConcurrentCalls: 500
        maxWaitDuration: 500ms